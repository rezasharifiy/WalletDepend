apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

project.ext {

    libraryVersion = '1.1.7'

    bintrayRepo = 'wallet'
    bintrayName = 'walletdepend'

    publishedGroupId = 'ir.fanap.walletdepend'
    libraryName = 'wallet dependencies'
    artifact = 'wallet-dependencies'

    libraryDescription = 'A simple library that implement remote dependencies.'

    siteUrl = 'https://github.com/rezasharifiy/WalletDepend.git'
    gitUrl = 'https://github.com/rezasharifiy/WalletDepend.git'


    developerId = 'rezasharifiy'
    developerName = 'reza sharifi'
    developerEmail = 'https://github.com/rezasharifiy/WalletDepend'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

//
//configurations.maybeCreate("default")
//artifacts.add("default", file('kafkaclient.aar'))


install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'aar'
            groupId publishedGroupId
            artifactId artifact

            name libraryName
            description libraryDescription
            url siteUrl

            licenses {
                license {
                    name licenseName
                    url licenseUrl
                }
            }
            developers {
                developer {
                    id developerId
                    name developerName
                    email developerEmail
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }

            println("end of setting")

        }
        pom.whenConfigured { pom ->
            println("######### when config $pom")

        }
    }
}


afterEvaluate { project ->
    println(">>>after eval $project")

    uploadArchives {
        println(">>>upload archives")

        repositories {
            println(">>>repo")

            mavenDeployer {

                repository(url: "file://${buildDir}/outputs/maven")


                println(">>>maven deployer")


                pom.groupId = group
                pom.artifactId = artifact
                pom.version = libraryVersion
                pom.project {

                    println(">>>pom project")

                    packaging 'aar'
                    groupId publishedGroupId
                    artifactId artifact

                    name libraryName
                    description libraryDescription
                    url siteUrl

                    licenses {
                        license {
                            name licenseName
                            url licenseUrl
                        }
                    }
                    developers {
                        developer {
                            id developerId
                            name developerName
                            email developerEmail
                        }
                    }
                    scm {
                        connection gitUrl
                        developerConnection gitUrl
                        url siteUrl
                    }
                }

                println(">>>>end of pom")


                pom.whenConfigured { pom ->
                    println(">>>>when configuered")
                }
            }
        }
    }


    task publishIt {

        doFirst {
            println 'start publishing'
        }
        doLast {
            println 'Published successfully!'
        }
        dependsOn 'clean'
        dependsOn 'install'
        dependsOn 'bintrayUpload'
        tasks.findByName('install').mustRunAfter('clean')
        tasks.findByName('bintrayUpload').mustRunAfter('install')


    }


    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    bintray {
        user = properties.getProperty("bintray.user")
        key = properties.getProperty("bintray.apikey")

        configurations = ['archives']
        pkg {
            repo = bintrayRepo
            name = bintrayName
            desc = libraryDescription
            websiteUrl = siteUrl
            vcsUrl = gitUrl
            licenses = allLicenses
            dryRun = false
            publish = true
            override = true
            publicDownloadNumbers = true
            version {
                desc = libraryDescription
            }
        }
    }
}
//
//install {
//    repositories.mavenInstaller {
//        pom.project {
//            packaging 'aar'
//            groupId publishedGroupId
//            artifactId artifact
//
//            name libraryName
//            description libraryDescription
//            url siteUrl
//
//            licenses {
//                license {
//                    name licenseName
//                    url licenseUrl
//                }
//            }
//            developers {
//                developer {
//                    id developerId
//                    name developerName
//                    email developerEmail
//                }
//            }
//            scm {
//                connection gitUrl
//                developerConnection gitUrl
//                url siteUrl
//            }
//        }
//    }
//}
//
//task sourcesJar(type: Jar) {
//    classifier = 'sources'
//    from android.sourceSets.main.java.srcDirs
//}
//
//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//Properties properties = new Properties()
//properties.load(project.rootProject.file('local.properties').newDataInputStream())
//
//bintray {
//    user = properties.getProperty("bintray.user")
//    key = properties.getProperty("bintray.apikey")
//
//    configurations = ['archives']
//    pkg {
//        repo = bintrayRepo
//        name = bintrayName
//        desc = libraryDescription
//        websiteUrl = siteUrl
//        vcsUrl = gitUrl
//        licenses = allLicenses
//        dryRun = false
//        publish = true
//        override = false
//        publicDownloadNumbers = true
//        version {
//            desc = libraryDescription
//        }
//    }
//}